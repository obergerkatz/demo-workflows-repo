name: CICD All
on:
  workflow_dispatch:
jobs:
  ci_develop_use1:
    runs-on: ubuntu-latest
    environment: develop_use1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: AWS Configure Credentials
        uses: ./actions/aws/configure-creds
        with:
          aws_account_id: ${{ vars.AWS_ACCOUNT_ID }}
          aws_region: ${{ vars.AWS_REGION }}
      - name: Build and push Docker image
        uses: ./action-sets/docker/build-and-push
        with:
          aws_account_id: ${{ vars.AWS_ACCOUNT_ID }}
          aws_region: ${{ vars.AWS_REGION }}

  cd_develop_use1:
    runs-on: ubuntu-latest
    needs: ci_develop_use1
    environment: develop_use1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Sync and wait for ArgoCD
        uses: ./action-sets/argocd/sync-and-wait
        with:
          aws_account_id: ${{ vars.AWS_ACCOUNT_ID }}
          aws_region: ${{ vars.AWS_REGION }}
          service_name: "service_foo_develop_use1"

  ci_develop_euc1:
    runs-on: ubuntu-latest
    environment: develop_euc1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: AWS Configure Credentials
        uses: ./actions/aws/configure-creds
        with:
          aws_account_id: ${{ vars.AWS_ACCOUNT_ID }}
          aws_region: ${{ vars.AWS_REGION }}
      - name: Build and push Docker image
        uses: ./action-sets/docker/build-and-push
        with:
          aws_account_id: ${{ vars.AWS_ACCOUNT_ID }}
          aws_region: ${{ vars.AWS_REGION }}

  cd_develop_euc1:
    runs-on: ubuntu-latest
    needs: ci_develop_euc1
    environment: develop_use1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Sync and wait for ArgoCD
        uses: ./action-sets/argocd/sync-and-wait
        with:
          aws_account_id: ${{ vars.AWS_ACCOUNT_ID }}
          aws_region: ${{ vars.AWS_REGION }}
          service_name: "service_foo_develop_euc1"